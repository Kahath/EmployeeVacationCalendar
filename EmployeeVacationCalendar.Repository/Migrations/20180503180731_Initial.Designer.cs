// <auto-generated />
using EmployeeVacationCalendar.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace EmployeeVacationCalendar.Repository.Migrations
{
	[DbContext(typeof(ApplicationContext))]
	[Migration("20180503180731_Initial")]
	partial class Initial
	{
#pragma warning disable 1591
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
				.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

			modelBuilder.Entity("EmployeeVacationCalendar.Domain.Model.CalendarDay", b =>
				{
					b.Property<DateTime>("Date");

					b.Property<int>("Day");

					b.Property<int>("DayOfWeek");

					b.Property<int>("DayOfYear");

					b.Property<string>("Description");

					b.Property<bool>("IsHoliday");

					b.Property<int>("Month");

					b.Property<int>("Quarter");

					b.Property<int>("Week");

					b.Property<int>("WeekOfMonth");

					b.Property<int>("Year");

					b.HasKey("Date");

					b.ToTable("Calendar");
				});

			modelBuilder.Entity("EmployeeVacationCalendar.Domain.Model.Employee", b =>
				{
					b.Property<int?>("Id")
						.ValueGeneratedOnAdd();

					b.Property<string>("FirstName");

					b.Property<string>("LastName");

					b.Property<int>("UserId");

					b.HasKey("Id");

					b.HasIndex("UserId")
						.IsUnique();

					b.ToTable("Employees");
				});

			modelBuilder.Entity("EmployeeVacationCalendar.Domain.Model.Role", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd();

					b.Property<string>("Name");

					b.HasKey("Id");

					b.ToTable("Roles");
				});

			modelBuilder.Entity("EmployeeVacationCalendar.Domain.Model.User", b =>
				{
					b.Property<int?>("Id")
						.ValueGeneratedOnAdd();

					b.Property<string>("Password");

					b.Property<string>("UserName");

					b.HasKey("Id");

					b.ToTable("Users");
				});

			modelBuilder.Entity("EmployeeVacationCalendar.Domain.Model.Vacation", b =>
				{
					b.Property<int?>("Id")
						.ValueGeneratedOnAdd();

					b.Property<DateTime>("DateFrom");

					b.Property<DateTime>("DateTo");

					b.Property<int>("EmployeeId");

					b.Property<int>("Status");

					b.Property<int>("Type");

					b.HasKey("Id");

					b.HasIndex("EmployeeId");

					b.ToTable("Vacations");
				});

			modelBuilder.Entity("EmployeeVacationCalendar.Repository.Entities.UserRole", b =>
				{
					b.Property<int>("UserId");

					b.Property<int>("RoleId");

					b.HasKey("UserId", "RoleId");

					b.ToTable("UserRoles");
				});

			modelBuilder.Entity("EmployeeVacationCalendar.Domain.Model.Employee", b =>
				{
					b.HasOne("EmployeeVacationCalendar.Domain.Model.User")
						.WithOne("Employee")
						.HasForeignKey("EmployeeVacationCalendar.Domain.Model.Employee", "UserId")
						.OnDelete(DeleteBehavior.Cascade);
				});

			modelBuilder.Entity("EmployeeVacationCalendar.Domain.Model.Vacation", b =>
				{
					b.HasOne("EmployeeVacationCalendar.Domain.Model.Employee", "Employee")
						.WithMany("Vacations")
						.HasForeignKey("EmployeeId")
						.OnDelete(DeleteBehavior.Cascade);
				});
#pragma warning restore 612, 618
		}
	}
}
